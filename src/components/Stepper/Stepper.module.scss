@use '../styles/core.scss' as *;
@use '../styles/base.scss' as *;

// Local variables based on global custom properties
$stepper-bg: var(--md-sys-color-surface);
$stepper-color: var(--md-sys-color-on-surface);

$step-indicator-size: 40px;
$step-indicator-size-mobile: 24px;
$step-indicator-bg: var(--md-sys-color-surface-variant);
$step-indicator-bg-active: var(--md-sys-color-primary);
$step-indicator-bg-completed: var(--md-sys-color-primary);
$step-indicator-bg-error: var(--md-sys-color-error);
$step-indicator-color: var(--md-sys-color-on-surface-variant);
$step-indicator-color-active: var(--md-sys-color-on-primary);
$step-indicator-color-completed: var(--md-sys-color-on-primary);
$step-indicator-color-error: var(--md-sys-color-on-error);

$step-label-color: var(--md-sys-color-on-surface);
$step-label-color-active: var(--md-sys-color-primary);
$step-label-color-error: var(--md-sys-color-error);
$step-label-color-disabled: var(--md-sys-color-on-surface);

$step-description-color: var(--md-sys-color-on-surface-variant);

$connector-color: var(--md-sys-color-outline-variant);
$connector-color-active: var(--md-sys-color-primary);
$connector-color-completed: var(--md-sys-color-primary);

$label-font-size: var(--md-sys-typescale-body-large-size);
$label-line-height: var(--md-sys-typescale-body-large-line-height);
$label-font-weight: var(--md-sys-typescale-body-large-weight);

$description-font-size: var(--md-sys-typescale-body-medium-size);
$description-line-height: var(--md-sys-typescale-body-medium-line-height);
$description-font-weight: var(--md-sys-typescale-body-medium-weight);

.stepper {
  display: flex;
  background: $stepper-bg;
  color: $stepper-color;

  &.horizontal {
    flex-direction: row;
    align-items: flex-start;
  }

  &.vertical {
    flex-direction: column;
  }

  &.mobile {
    .stepIndicator {
      width: $step-indicator-size-mobile;
      height: $step-indicator-size-mobile;
      font-size: 12px;
    }
  }
}

.step {
  display: flex;
  position: relative;

  .stepper.horizontal & {
    flex-direction: column;
    align-items: center;
    flex: 1;

    &:not(:last-child) {
      margin-right: var(--space-md);
    }
  }

  .stepper.vertical & {
    flex-direction: row;
    align-items: flex-start;
    width: 100%;

    &:not(:last-child) {
      margin-bottom: var(--space-lg);
    }
  }
}

.stepHeader {
  display: flex;
  align-items: center;
  position: relative;

  .stepper.horizontal & {
    flex-direction: column;
    text-align: center;
  }

  .stepper.vertical & {
    flex-direction: row;
    min-width: 200px;
  }
}

.stepIndicator {
  display: flex;
  align-items: center;
  justify-content: center;
  width: $step-indicator-size;
  height: $step-indicator-size;
  border-radius: 50%;
  background: $step-indicator-bg;
  color: $step-indicator-color;
  font-size: 14px;
  font-weight: 500;
  border: 2px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  z-index: 2;

  &:hover:not(.disabled) {
    background: var(--md-sys-color-primary-container);
    color: var(--md-sys-color-on-primary-container);
  }

  &:focus-visible {
    outline: 2px solid var(--md-sys-color-primary);
    outline-offset: 2px;
  }

  &.active {
    background: $step-indicator-bg-active;
    color: $step-indicator-color-active;
    border-color: var(--md-sys-color-primary);
  }

  &.completed {
    background: $step-indicator-bg-completed;
    color: $step-indicator-color-completed;
  }

  &.error {
    background: $step-indicator-bg-error;
    color: $step-indicator-color-error;
  }

  &.disabled {
    background: var(--md-sys-color-surface-variant);
    color: var(--md-sys-color-on-surface);
    opacity: 0.38;
    cursor: not-allowed;
  }

  .stepper.vertical & {
    margin-right: var(--space-md);
  }

  .stepper.horizontal & {
    margin-bottom: var(--space-sm);
  }
}

.stepLabel {
  display: flex;
  flex-direction: column;
  color: $step-label-color;

  .stepper.horizontal & {
    text-align: center;
    align-items: center;
  }

  .stepper.vertical & {
    text-align: left;
  }

  .step.active & {
    color: $step-label-color-active;
  }

  .step.error & {
    color: $step-label-color-error;
  }

  .step.disabled & {
    color: $step-label-color-disabled;
    opacity: 0.38;
  }
}

.stepLabelText {
  font-size: $label-font-size;
  line-height: $label-line-height;
  font-weight: $label-font-weight;
  margin: 0;
}

.stepDescription {
  font-size: $description-font-size;
  line-height: $description-line-height;
  font-weight: $description-font-weight;
  color: $step-description-color;
  margin: var(--space-xs) 0 0 0;
}

.stepOptional {
  font-size: 12px;
  color: $step-description-color;
  font-style: italic;
  margin-top: 2px;
}

.stepContent {
  overflow: hidden;
  transition: all 0.3s ease;

  .stepper.horizontal & {
    width: 100%;
    margin-top: var(--space-md);
  }

  .stepper.vertical & {
    flex: 1;
    margin-left: var(--space-md);
    padding-left: var(--space-md);
  }

  &.collapsed {
    max-height: 0;
    opacity: 0;
    margin: 0;
    padding: 0;
  }

  &.expanded {
    max-height: 1000px;
    opacity: 1;
  }
}

.stepConnector {
  position: absolute;
  background: $connector-color;
  transition: background-color 0.2s ease;
  z-index: 1;

  .stepper.horizontal & {
    top: calc(#{$step-indicator-size} / 2 - 1px);
    left: calc(50% + #{$step-indicator-size} / 2);
    right: calc(-100% + 50% - #{$step-indicator-size} / 2);
    height: 2px;
  }

  .stepper.vertical & {
    left: calc(#{$step-indicator-size} / 2 - 1px);
    top: calc(#{$step-indicator-size} + #{var(--space-sm)});
    bottom: calc(-#{var(--space-lg)} + #{var(--space-sm)});
    width: 2px;
  }

  &.active,
  &.completed {
    background: $connector-color-active;
  }

  .step:last-child & {
    display: none;
  }
}

// Mobile variant specific styles
.stepper.mobile {
  .stepConnector {
    .stepper.horizontal & {
      top: calc(#{$step-indicator-size-mobile} / 2 - 1px);
      left: calc(50% + #{$step-indicator-size-mobile} / 2);
      right: calc(-100% + 50% - #{$step-indicator-size-mobile} / 2);
    }

    .stepper.vertical & {
      left: calc(#{$step-indicator-size-mobile} / 2 - 1px);
    }
  }
}

// Icons
.stepIcon {
  width: 18px;
  height: 18px;
  display: flex;
  align-items: center;
  justify-content: center;

  .stepper.mobile & {
    width: 14px;
    height: 14px;
  }
}

.checkIcon {
  width: 16px;
  height: 16px;
}

.errorIcon {
  width: 16px;
  height: 16px;
}
