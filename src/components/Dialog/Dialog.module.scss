@use '../styles/core.scss' as *;

// Local variables based on global custom properties
$dialog-bg: var(--md-sys-color-surface-container-high);
$dialog-color: var(--md-sys-color-on-surface);
$dialog-border-radius: 28px;
$dialog-shadow: var(--md-sys-elevation-3);
$dialog-max-width: 560px;
$dialog-min-width: 280px;
$dialog-max-height: calc(100vh - 48px);
$dialog-margin: 24px;

// Overlay
$overlay-bg: var(--md-sys-color-scrim);
$overlay-opacity: 0.3;

// Header
$header-padding: var(--space-lg) var(--space-lg) var(--space-md);
$header-title-color: var(--md-sys-color-on-surface);
$header-icon-size: 24px;
$header-close-size: 40px;

// Content
$content-padding: 0 var(--space-lg);
$content-max-height: calc(100vh - 200px);

// Actions
$actions-padding: var(--space-md) var(--space-lg) var(--space-lg);
$actions-gap: var(--space-sm);

// Animation
$animation-duration: 0.25s;
$animation-easing: cubic-bezier(0.4, 0, 0.2, 1);

.overlayContainer {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $dialog-margin;
  z-index: 9999;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: $overlay-bg;
  opacity: 0;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: $dialog-margin;
  transition: opacity $animation-duration $animation-easing;
  pointer-events: auto;

  &.open {
    opacity: $overlay-opacity;
  }

  &.closing {
    opacity: 0;
  }
}

.dialog {
  background-color: $dialog-bg;
  color: $dialog-color;
  border-radius: $dialog-border-radius;
  box-shadow: $dialog-shadow;
  min-width: $dialog-min-width;
  max-width: $dialog-max-width;
  max-height: $dialog-max-height;
  width: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transform: scale(0.8);
  opacity: 0;
  transition:
    transform $animation-duration $animation-easing,
    opacity $animation-duration $animation-easing;
  position: relative;
  z-index: 10000;
  pointer-events: auto;

  &.open {
    transform: scale(1);
    opacity: 1;
  }

  &.closing {
    transform: scale(0.8);
    opacity: 0;
  }

  // Dialog types
  &.alert {
    .header {
      .icon {
        color: var(--md-sys-color-error);
      }
    }
  }

  &.confirmation {
    .header {
      .icon {
        color: var(--md-sys-color-primary);
      }
    }
  }

  &.fullscreen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    max-width: none;
    max-height: none;
    border-radius: 0;
    transform: translateY(100%);

    &.open {
      transform: translateY(0);
    }

    &.closing {
      transform: translateY(100%);
    }
  }

  // Dialog sizes
  &.small {
    max-width: 400px;
  }

  &.medium {
    max-width: $dialog-max-width;
  }

  &.large {
    max-width: 800px;
  }

  // Draggable
  &.draggable {
    .header {
      cursor: move;
      user-select: none;
    }
  }

  // Resizable
  &.resizable {
    resize: both;
    overflow: auto;
    min-height: 200px;

    &::after {
      content: '';
      position: absolute;
      bottom: 0;
      right: 0;
      width: 20px;
      height: 20px;
      background: linear-gradient(-45deg,
          transparent 40%,
          var(--md-sys-color-outline) 40%,
          var(--md-sys-color-outline) 50%,
          transparent 50%,
          transparent 60%,
          var(--md-sys-color-outline) 60%,
          var(--md-sys-color-outline) 70%,
          transparent 70%);
      cursor: se-resize;
    }
  }
}

.header {
  padding: $header-padding;
  display: flex;
  align-items: flex-start;
  gap: var(--space-md);
  flex-shrink: 0;

  .icon {
    flex-shrink: 0;
    width: $header-icon-size;
    height: $header-icon-size;
    margin-top: 2px;
  }

  .titleContainer {
    flex: 1;
    min-width: 0;
  }

  .title {
    margin: 0;
    font-size: var(--md-sys-typescale-headline-small-font-size);
    font-weight: var(--md-sys-typescale-headline-small-font-weight);
    line-height: var(--md-sys-typescale-headline-small-line-height);
    color: $header-title-color;
  }

  .closeButton {
    flex-shrink: 0;
    width: $header-close-size;
    height: $header-close-size;
    display: flex;
    align-items: center;
    justify-content: center;
    border: none;
    background: transparent;
    border-radius: 50%;
    cursor: pointer;
    color: var(--md-sys-color-on-surface-variant);
    transition:
      background-color 0.2s ease,
      color 0.2s ease;

    &:hover {
      background-color: var(--md-sys-color-on-surface);
      background-color: color-mix(in srgb, var(--md-sys-color-on-surface) 8%, transparent);
    }

    &:focus {
      outline: 2px solid var(--md-sys-color-primary);
      outline-offset: 2px;
    }

    svg {
      width: 24px;
      height: 24px;
    }
  }
}

.content {
  padding: $content-padding;
  flex: 1;
  overflow-y: auto;
  max-height: $content-max-height;

  &.scrollable {
    overflow-y: auto;
  }

  &:not(.scrollable) {
    overflow-y: visible;
  }

  // Typography for content
  p {
    margin: 0 0 var(--space-md) 0;
    font-size: var(--md-sys-typescale-body-medium-font-size);
    font-weight: var(--md-sys-typescale-body-medium-font-weight);
    line-height: var(--md-sys-typescale-body-medium-line-height);

    &:last-child {
      margin-bottom: 0;
    }
  }
}

.actions {
  padding: $actions-padding;
  display: flex;
  gap: $actions-gap;
  justify-content: flex-end;
  flex-shrink: 0;
}

// Mobile responsive
@media (max-width: 768px) {
  .overlay {
    padding: var(--space-sm);
  }

  .dialog {
    max-width: none;
    width: calc(100% - 32px);
    margin: var(--space-md);

    &.fullscreen {
      width: 100vw;
      margin: 0;
    }
  }

  .header {
    padding: var(--space-md);
  }

  .content {
    padding: 0 var(--space-md);
  }

  .actions {
    padding: var(--space-md);
    flex-direction: column-reverse;

    .action {
      width: 100%;
    }
  }
}

// Accessibility
@media (prefers-reduced-motion: reduce) {

  .overlay,
  .dialog {
    transition: none;
  }
}

// Dark theme adjustments
[data-theme='dark'] {
  .dialog {
    box-shadow: var(--md-sys-elevation-3-dark);
  }
}

// Focus trap styling
.dialog:focus {
  outline: none;
}
