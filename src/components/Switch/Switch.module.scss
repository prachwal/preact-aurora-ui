@use "../styles/core.scss" as *;
// Switch Material Design 3 Variables
$switch-font-family: var(--font-family-base);
$switch-font-size: var(--font-size-base);
$switch-line-height: var(--line-height-normal);
$switch-transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);

// Switch track dimensions
$switch-track-width-small: 32px;
$switch-track-width-medium: 40px;
$switch-track-width-large: 48px;

$switch-track-height-small: 16px;
$switch-track-height-medium: 20px;
$switch-track-height-large: 24px;

// Switch thumb dimensions
$switch-thumb-size-small: 12px;
$switch-thumb-size-medium: 16px;
$switch-thumb-size-large: 20px;

// Switch colors (using MD3 tokens)
$switch-track-off: var(--md-sys-color-outline);
$switch-track-on: var(--md-sys-color-primary);
$switch-track-disabled: var(--md-sys-color-outline-variant);

$switch-thumb-off: var(--md-sys-color-outline);
$switch-thumb-on: var(--md-sys-color-on-primary);
$switch-thumb-disabled: var(--md-sys-color-on-surface-variant);

// Primary colors
$switch-primary: var(--md-sys-color-primary);
$switch-primary-container: var(--md-sys-color-primary-container);

// Secondary colors
$switch-secondary: var(--md-sys-color-secondary);
$switch-secondary-container: var(--md-sys-color-secondary-container);

// Error colors
$switch-error: var(--md-sys-color-error);
$switch-error-container: var(--md-sys-color-error-container);

// Surface colors
$switch-surface: var(--md-sys-color-surface);
$switch-surface-variant: var(--md-sys-color-surface-variant);

// Text colors
$switch-text: var(--md-sys-color-on-surface);
$switch-text-disabled: var(--md-sys-color-on-surface-variant);

// Base switch styles
.switch {
  display: inline-flex;
  align-items: flex-start;
  font-family: $switch-font-family;
  font-size: $switch-font-size;
  line-height: $switch-line-height;
  cursor: pointer;

  &--disabled {
    cursor: not-allowed;
  }
}

.wrapper {
  position: relative;
  display: inline-flex;
  align-items: center;
  margin-right: var(--space-sm);
  flex-shrink: 0;
}

.input {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  cursor: inherit;
  z-index: 1;

  &:focus-visible+.track {
    @include focus-ring($switch-primary);
  }
}

.track {
  position: relative;
  display: inline-flex;
  align-items: center;
  background-color: $switch-track-off;
  border-radius: 50px;
  transition: $switch-transition;

  &--checked {
    background-color: $switch-track-on;
  }

  &--disabled {
    background-color: $switch-track-disabled;
    opacity: 0.38;
  }

  &--error {
    background-color: $switch-error;
  }
}

.thumb {
  position: absolute;
  background-color: $switch-thumb-off;
  border-radius: 50%;
  transition: $switch-transition;
  left: 2px;

  &--checked {
    background-color: $switch-thumb-on;
  }

  &--disabled {
    background-color: $switch-thumb-disabled;
  }

  &--error {
    background-color: $switch-error;
  }
}

.label {
  color: $switch-text;
  cursor: inherit;

  &--disabled {
    color: $switch-text-disabled;
  }

  &--error {
    color: $switch-error;
  }
}

.helper {
  margin-top: var(--space-xs);
  font-size: var(--font-size-sm);
  color: var(--md-sys-color-on-surface-variant);

  &--error {
    color: $switch-error;
  }
}

.required {
  color: $switch-error;
  margin-left: var(--space-xs);
}

// Size variants
.switch--small {
  .track {
    width: $switch-track-width-small;
    height: $switch-track-height-small;
  }

  .thumb {
    width: $switch-thumb-size-small;
    height: $switch-thumb-size-small;

    &--checked {
      transform: translateX(#{$switch-track-width-small - $switch-thumb-size-small - 4px});
    }
  }
}

.switch--medium {
  .track {
    width: $switch-track-width-medium;
    height: $switch-track-height-medium;
  }

  .thumb {
    width: $switch-thumb-size-medium;
    height: $switch-thumb-size-medium;

    &--checked {
      transform: translateX(#{$switch-track-width-medium - $switch-thumb-size-medium - 4px});
    }
  }
}

.switch--large {
  .track {
    width: $switch-track-width-large;
    height: $switch-track-height-large;
  }

  .thumb {
    width: $switch-thumb-size-large;
    height: $switch-thumb-size-large;

    &--checked {
      transform: translateX(#{$switch-track-width-large - $switch-thumb-size-large - 4px});
    }
  }
}

// Color variants
.switch--primary {
  .track--checked {
    background-color: $switch-primary;
  }

  .thumb--checked {
    background-color: $switch-primary-container;
  }
}

.switch--secondary {
  .track--checked {
    background-color: $switch-secondary;
  }

  .thumb--checked {
    background-color: $switch-secondary-container;
  }
}

.switch--error {
  .track {
    background-color: $switch-error;

    &--checked {
      background-color: $switch-error;
    }
  }

  .thumb {
    &--checked {
      background-color: $switch-error-container;
    }
  }

  .label {
    color: $switch-error;
  }
}

// Enhanced animations for MD3
.thumb {
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    background-color: currentColor;
    border-radius: 50%;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
    transition: $switch-transition;
  }
}

.input:hover:not(:disabled)+.track .thumb::before {
  opacity: 0.08;
  transform: translate(-50%, -50%) scale(1);
}

.input:active:not(:disabled)+.track .thumb::before {
  opacity: 0.12;
  transform: translate(-50%, -50%) scale(1);
}

// Responsive adjustments
@include mobile-only {
  .switch {
    touch-action: manipulation;
  }

  .wrapper {
    margin-right: var(--space-md);
  }
}

// Dark theme adjustments
[data-theme="dark"] {
  .track {
    background-color: var(--md-sys-color-outline-variant);

    &--checked {
      background-color: var(--md-sys-color-primary);
    }
  }

  .thumb {
    background-color: var(--md-sys-color-surface-variant);

    &--checked {
      background-color: var(--md-sys-color-on-primary);
    }
  }
}
