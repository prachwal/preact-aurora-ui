@use "../styles/colors.scss" as *;
@use "../styles/spacing.scss" as *;
@use "../styles/typography.scss" as *;
@use "../styles/breakpoints.scss" as *;
@use "../styles/mixins-enhanced.scss" as *;

// Local variables
$layout-bg: var(--color-background);
$layout-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

.layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  height: 100vh;
  width: 100vw;
  max-width: 100vw;
  background: $layout-bg;
  box-sizing: border-box;
  font-family: var(--font-family-base);
  color: var(--color-on-surface);
  transition: $layout-transition;
  overflow: hidden; // Prevent body scrolling
}

.layout--horizontal {
  flex-direction: row;
  gap: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.layout--vertical {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  flex: 1 1 auto;
  min-height: 0;
  overflow: hidden; // Prevent overflow in vertical layout
}

.layout--fullHeight {
  min-height: 100vh;
  height: 100vh;
  width: 100vw;
  max-width: 100vw;
}

// Improved scrollable area - only content scrolls
:global(.scrollable-area) {
  flex: 1 1 auto;
  min-height: 0;
  height: calc(100vh - 56px); // Subtract compact header height
  overflow-y: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
  background: var(--color-background);

  // Modern scrollbar styling using mixin
  @include custom-scrollbar(6px, var(--color-surface-variant), var(--color-outline));
}

// Layout variants
.layout--variant-default {
  // Default variant - inherits base styles
  background: $layout-bg;
}

.layout--variant-dashboard {
  background: var(--color-background);

  // Enhanced for dashboard layouts
  &.layout--horizontal {
    > :first-child {
      flex-shrink: 0; // Sidebar shouldn't shrink
    }

    > :last-child {
      flex: 1 1 auto; // Content area takes remaining space
      min-width: 0;
    }
  }
}

.layout--variant-app {
  background: var(--color-surface);
  border-radius: 12px;
  overflow: hidden;
  box-shadow: var(--shadow-2);

  @include respond-below(md) {
    border-radius: 0;
    box-shadow: none;
  }
}

.layout--variant-minimal {
  background: transparent;
  box-shadow: none;
  border: none;
}

// Padding variants
.layout--padding-none {
  padding: 0;
}

.layout--padding-sm {
  padding: var(--space-sm);
}

.layout--padding-md {
  padding: var(--space-md);
}

.layout--padding-lg {
  padding: var(--space-lg);
}

.layout--padding-xl {
  padding: var(--space-xl);
}

// Gap variants
.layout--gap-none {
  gap: 0;
}

.layout--gap-sm {
  gap: var(--space-sm);
}

.layout--gap-md {
  gap: var(--space-md);
}

.layout--gap-lg {
  gap: var(--space-lg);
}

.layout--gap-xl {
  gap: var(--space-xl);
}

// Overflow variants
.layout--overflow-auto {
  overflow: auto;
}

.layout--overflow-visible {
  overflow: visible;
}

.layout--overflow-hidden {
  overflow: hidden;
}

@media (max-width: $breakpoint-sm) {
  .layout {
    padding: 0;
  }

  .layout--variant-app {
    border-radius: 0;
    box-shadow: none;
  }

  .layout--padding-sm,
  .layout--padding-md {
    padding: var(--space-xs);
  }

  .layout--padding-lg,
  .layout--padding-xl {
    padding: var(--space-sm);
  }
}